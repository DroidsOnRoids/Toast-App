apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'jacoco'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.ajoberstar:gradle-git:1.7.2'
    }
}

import org.ajoberstar.grgit.Grgit

def git = Grgit.open(currentDir: projectDir)
def commitsOnBranchCount = git.log(includes: ['HEAD']).size()
def commitTimestamp = git.head().time

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.1'
    defaultConfig {
        applicationId "pl.droidsonrioids.toast"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode commitTimestamp
        versionName "0.1.$commitsOnBranchCount"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'BASE_API_URL', '"https://api.letswift.pl/api/v1/"'
        buildConfigField 'String', 'BASE_IMAGES_URL', '"https://api.letswift.pl"'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$versions.kotlin"

    // android
    implementation "com.android.support:appcompat-v7:$versions.support"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation "com.android.support:design:$versions.support"
    implementation "com.android.support:support-v4:$versions.support"
    implementation "com.android.support:cardview-v7:$versions.support"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'

    // rxjava
    implementation "io.reactivex.rxjava2:rxkotlin:2.1.0"
    implementation "io.reactivex.rxjava2:rxandroid:2.0.1"

    //dagger
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    implementation "com.google.dagger:dagger-android:$versions.dagger"

    // chuck
    debugImplementation "com.readystatesoftware.chuck:library:$versions.chuck"
    releaseImplementation "com.readystatesoftware.chuck:library-no-op:$versions.chuck"

    // architecture components
    kapt "android.arch.lifecycle:compiler:$versions.lifecycle"
    implementation "android.arch.lifecycle:extensions:$versions.lifecycle"

    // data binding
    kapt 'com.android.databinding:compiler:3.0.1'

    // picasso
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'

    // tests
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.12.0'
    testImplementation 'com.nhaarman:mockito-kotlin-kt1.1:1.5.0', {
        exclude group: 'org.jetbrains.kotlin'
    }
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

repositories {
    mavenCentral()
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*', '**/*Activity.*', '**/*Fragment.*']
    def debugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files(mainSrc)
    classDirectories = files(debugTree)
    executionData = fileTree(dir: "$buildDir", includes: ["jacoco/testDebugUnitTest.exec"])
}